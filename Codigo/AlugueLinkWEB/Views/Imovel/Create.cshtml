@model AlugueLinkWEB.Models.ImovelViewModel
@{
    ViewData["Title"] = "Cadastrar Imóvel";
}

<div class="row justify-content-center">
    <div class="col-12 col-lg-10 col-xl-8">
        <form asp-action="Create" id="imovelForm" class="needs-validation" novalidate>
            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="m-0">Endereço do Imóvel</h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-12 col-md-4">
                            <label asp-for="Cep" class="form-label">CEP <span class="required">*</span></label>
                            <input asp-for="Cep" class="form-control" type="text" pattern="[0-9]*" inputmode="numeric" maxlength="8" placeholder="00000-000" required oninput="this.value = this.value.replace(/[^0-9]/g, '')" />
                            <span asp-validation-for="Cep" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-8">
                            <label asp-for="Logradouro" class="form-label">Rua/Logradouro <span class="required">*</span></label>
                            <input asp-for="Logradouro" class="form-control" placeholder="Rua, Avenida, etc." required />
                            <span asp-validation-for="Logradouro" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-4">
                            <label asp-for="Numero" class="form-label">Número <span class="required">*</span></label>
                            <input asp-for="Numero" class="form-control" type="text" pattern="[0-9]*" inputmode="numeric" maxlength="5" placeholder="123" required oninput="this.value = this.value.replace(/[^0-9]/g, '')" />
                            <span asp-validation-for="Numero" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-8">
                            <label asp-for="Complemento" class="form-label">Complemento</label>
                            <input asp-for="Complemento" class="form-control" placeholder="Apto, Bloco, etc." />
                            <span asp-validation-for="Complemento" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-6">
                            <label asp-for="Bairro" class="form-label">Bairro <span class="required">*</span></label>
                            <input asp-for="Bairro" class="form-control" placeholder="Nome do bairro" required />
                            <span asp-validation-for="Bairro" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-4">
                            <label asp-for="Cidade" class="form-label">Cidade <span class="required">*</span></label>
                            <input asp-for="Cidade" class="form-control" placeholder="Nome da cidade" required />
                            <span asp-validation-for="Cidade" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-2">
                            <label asp-for="Estado" class="form-label">Estado <span class="required">*</span></label>
                            <select asp-for="Estado" class="form-select" required>
                                <option value="">Selecione</option>
                                <option value="AC">Acre</option>
                                <option value="AL">Alagoas</option>
                                <option value="AP">Amapá</option>
                                <option value="AM">Amazonas</option>
                                <option value="BA">Bahia</option>
                                <option value="CE">Ceará</option>
                                <option value="DF">Distrito Federal</option>
                                <option value="ES">Espírito Santo</option>
                                <option value="GO">Goiás</option>
                                <option value="MA">Maranhão</option>
                                <option value="MT">Mato Grosso</option>
                                <option value="MS">Mato Grosso do Sul</option>
                                <option value="MG">Minas Gerais</option>
                                <option value="PA">Pará</option>
                                <option value="PB">Paraíba</option>
                                <option value="PR">Paraná</option>
                                <option value="PE">Pernambuco</option>
                                <option value="PI">Piauí</option>
                                <option value="RJ">Rio de Janeiro</option>
                                <option value="RN">Rio Grande do Norte</option>
                                <option value="RS">Rio Grande do Sul</option>
                                <option value="RO">Rondônia</option>
                                <option value="RR">Roraima</option>
                                <option value="SC">Santa Catarina</option>
                                <option value="SP">São Paulo</option>
                                <option value="SE">Sergipe</option>
                                <option value="TO">Tocantins</option>
                            </select>
                            <span asp-validation-for="Estado" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row g-4 mb-4">
                <div class="col-12 col-lg-8">
                    <div class="card h-100">
                        <div class="card-header">
                            <h5 class="m-0">Características do Imóvel</h5>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-12">
                                    <label asp-for="Tipo" class="form-label">Tipo de Imóvel <span class="required">*</span></label>
                                    <select asp-for="Tipo" class="form-select" required>
                                        <option value="">Selecione o tipo</option>
                                        <option value="casa">Casa</option>
                                        <option value="apartamento">Apartamento</option>
                                        <option value="comercial">Comercial</option>
                                    </select>
                                    <span asp-validation-for="Tipo" class="text-danger"></span>
                                </div>
                                <div class="col-6 col-md-3">
                                    <label asp-for="Quartos" class="form-label">Quartos <span class="required">*</span></label>
                                    <input asp-for="Quartos" class="form-control" type="number" min="0" max="50" step="1" placeholder="0" required oninput="this.value = this.value.replace(/[^0-9]/g, ''); if(parseInt(this.value) > 50) this.value = 50;" />
                                    <span asp-validation-for="Quartos" class="text-danger"></span>
                                </div>
                                <div class="col-6 col-md-3">
                                    <label asp-for="Banheiros" class="form-label">Banheiros <span class="required">*</span></label>
                                    <input asp-for="Banheiros" class="form-control" type="number" min="0" max="50" step="1" placeholder="0" required oninput="this.value = this.value.replace(/[^0-9]/g, ''); if(parseInt(this.value) > 50) this.value = 50;" />
                                    <span asp-validation-for="Banheiros" class="text-danger"></span>
                                </div>
                                <div class="col-6 col-md-3">
                                    <label asp-for="Area" class="form-label">Área (m²) <span class="required">*</span></label>
                                    <input asp-for="Area" class="form-control" type="text" placeholder="0,00" required oninput="formatDecimalInput(this)" data-decimal-field="true" />
                                    <span asp-validation-for="Area" class="text-danger"></span>
                                </div>
                                <div class="col-6 col-md-3">
                                    <label asp-for="VagasGaragem" class="form-label text-nowrap">Vagas Garagem</label>
                                    <input asp-for="VagasGaragem" class="form-control" type="number" min="0" max="50" step="1" placeholder="0" oninput="this.value = this.value.replace(/[^0-9]/g, ''); if(parseInt(this.value) > 50) this.value = 50;" />
                                    <span asp-validation-for="VagasGaragem" class="text-danger"></span>
                                </div>
                                <div class="col-12">
                                    <label asp-for="Valor" class="form-label">Valor do Aluguel (R$) <span class="required">*</span></label>
                                    <input asp-for="Valor" class="form-control" type="text" placeholder="1000,50" required oninput="formatDecimalInput(this)" data-decimal-field="true" />
                                    <span asp-validation-for="Valor" class="text-danger"></span>
                                </div>
                                <div class="col-12">
                                    <label asp-for="Descricao" class="form-label">Características</label>
                                    <textarea asp-for="Descricao" class="form-control" rows="4" placeholder="Descreva as características do imóvel (mobiliado, reformado, etc.)"></textarea>
                                    <span asp-validation-for="Descricao" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-lg-4">
                    <div class="card h-100">
                        <div class="card-header">
                            <h5 class="m-0">Fotos</h5>
                        </div>
                        <div class="card-body d-flex align-items-center justify-content-center">
                            <div class="text-center">
                                <div class="photo-placeholder mb-3">
                                    <svg width="80" height="80" class="text-muted" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1">
                                        <rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
                                        <circle cx="8.5" cy="8.5" r="1.5"/>
                                        <polyline points="21,15 16,10 5,21"/>
                                    </svg>
                                </div>
                                <p class="text-muted small mb-2">Adicione fotos do imóvel</p>
                                <button type="button" class="btn btn-outline-primary btn-sm">Adicionar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="d-flex gap-3 justify-content-end">
                <a asp-action="Index" class="btn btn-outline-secondary">Cancelar</a>
                <button type="submit" class="btn btn-primary px-4">Salvar</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Função para formatar entrada decimal com vírgula
        function formatDecimalInput(input) {
            let value = input.value;
            
            // Remove tudo que não seja número ou vírgula
            value = value.replace(/[^0-9,]/g, '');
            
            // Se há vírgula, garante apenas uma e limita a 2 dígitos após ela
            if (value.includes(',')) {
                let parts = value.split(',');
                if (parts.length > 2) {
                    // Remove vírgulas extras - mantém apenas a primeira
                    value = parts[0] + ',' + parts.slice(1).join('');
                    parts = value.split(',');
                }
                if (parts[1] && parts[1].length > 2) {
                    parts[1] = parts[1].substring(0, 2);
                    value = parts[0] + ',' + parts[1];
                }
            }
            
            input.value = value;
            
            // Remove mensagem de validação customizada se o campo tiver valor
            if (value.trim()) {
                input.setCustomValidity('');
            }
        }

        // Função para validar campos decimais customizados
        function validateDecimalField(input) {
            const value = input.value.trim();
            
            if (input.hasAttribute('required') && !value) {
                input.setCustomValidity('Este campo é obrigatório');
                return false;
            }
            
            if (value && !/^[0-9]+(\,[0-9]{1,2})?$/.test(value)) {
                input.setCustomValidity('Digite um valor válido (ex: 1000,50)');
                return false;
            }
            
            input.setCustomValidity('');
            return true;
        }

        // Validação de formulário com destaque
        document.getElementById('imovelForm').addEventListener('submit', function(e) {
            let isValid = true;
            
            // Validar campos decimais customizados
            const decimalFields = this.querySelectorAll('[data-decimal-field="true"]');
            decimalFields.forEach(field => {
                if (!validateDecimalField(field)) {
                    isValid = false;
                    field.classList.add('field-error');
                    setTimeout(() => {
                        field.classList.remove('field-error');
                    }, 3000);
                }
            });
            
            // Validar outros campos obrigatórios
            const requiredFields = this.querySelectorAll('[required]:not([data-decimal-field="true"])');
            requiredFields.forEach(field => {
                field.classList.remove('field-error');
                if (!field.value.trim()) {
                    isValid = false;
                    field.classList.add('field-error');
                    
                    // Remove o destaque após 3 segundos
                    setTimeout(() => {
                        field.classList.remove('field-error');
                    }, 3000);
                }
            });
            
            if (!isValid) {
                e.preventDefault();
                // Scroll para o primeiro campo com erro
                const firstError = this.querySelector('.field-error');
                if (firstError) {
                    firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    firstError.focus();
                }
            }
        });

        // Listener para validação em tempo real nos campos decimais
        document.querySelectorAll('[data-decimal-field="true"]').forEach(field => {
            field.addEventListener('blur', function() {
                validateDecimalField(this);
            });
            
            field.addEventListener('input', function() {
                // Remove mensagem de erro quando usuário começa a digitar
                this.setCustomValidity('');
                this.classList.remove('field-error');
            });
        });
    </script>
}