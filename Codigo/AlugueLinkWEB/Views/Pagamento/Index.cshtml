@model IEnumerable<AlugueLinkWEB.Models.PagamentoViewModel>

@{
    ViewData["Title"] = "Pagamentos";
    var totalItems = ViewBag.TotalItems ?? 0;
    var currentPage = ViewBag.Page ?? 1;
    var pageSize = ViewBag.PageSize ?? 10;
    var totalPages = (int)Math.Ceiling((double)totalItems / pageSize);
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>
        <i class="fas fa-money-bill-wave me-2 text-primary"></i>
        Pagamentos
        @if (!string.IsNullOrEmpty(ViewBag.LocadorNome))
        {
            <small class="text-muted">- @ViewBag.LocadorNome</small>
        }
    </h2>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus me-2"></i>Novo Pagamento
    </a>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["InfoMessage"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        <i class="fas fa-info-circle me-2"></i>@TempData["InfoMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (Model.Any())
{
    <div class="card shadow-sm">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-light">
                        <tr>
                            <th><i class="fas fa-calendar-alt me-1"></i>Data/Hora</th>
                            <th><i class="fas fa-money-bill me-1"></i>Valor</th>
                            <th><i class="fas fa-credit-card me-1"></i>Tipo</th>
                            <th><i class="fas fa-home me-1"></i>Imóvel</th>
                            <th><i class="fas fa-user me-1"></i>Inquilino</th>
                            <th><i class="fas fa-info-circle me-1"></i>Status</th>
                            <th class="text-center"><i class="fas fa-cogs me-1"></i>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @if (item.DataPagamento.HasValue)
                                    {
                                        <span class="fw-bold">@item.DataPagamento.Value.ToString("dd/MM/yyyy")</span>
                                        @if (item.HoraPagamento.HasValue)
                                        {
                                            <br><small class="text-muted">@item.HoraPagamento.Value.ToString("HH:mm")</small>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-muted">Não informado</span>
                                    }
                                </td>
                                <td>
                                    <span class="fw-bold text-success">
                                        @item.Valor?.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("pt-BR"))
                                    </span>
                                    @if (item.ValorAluguel.HasValue && item.Valor == item.ValorAluguel)
                                    {
                                        <br><small class="text-success">
                                            <i class="fas fa-check-circle"></i> Valor correto
                                        </small>
                                    }
                                    else if (item.ValorAluguel.HasValue && item.Valor != item.ValorAluguel)
                                    {
                                        <br><small class="text-warning">
                                            <i class="fas fa-exclamation-triangle"></i> Valor divergente
                                        </small>
                                    }
                                </td>
                                <td>
                                    <span class="badge bg-info">@item.TipoPagamentoTexto</span>
                                </td>
                                <td>
                                    <div class="small">
                                        @if (!string.IsNullOrEmpty(item.ImovelEndereco))
                                        {
                                            @item.ImovelEndereco
                                        }
                                        else
                                        {
                                            <span class="text-muted">Não informado</span>
                                        }
                                    </div>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.LocatarioNome))
                                    {
                                        <span class="fw-bold">@item.LocatarioNome</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Não informado</span>
                                    }
                                </td>
                                <td>
                                    <span class="badge @(item.StatusCssClass.Replace("text-", "bg-"))">
                                        @item.StatusPagamento
                                    </span>
                                </td>
                                <td class="text-center">
                                    <div class="btn-group btn-group-sm" role="group">
                                        <a asp-action="Details" asp-route-id="@item.Id" 
                                           class="btn btn-outline-info" title="Detalhes">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@item.Id" 
                                           class="btn btn-outline-warning" title="Editar">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" 
                                           class="btn btn-outline-danger" title="Excluir">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @* Paginação *@
    @if (totalPages > 1)
    {
        <nav aria-label="Navegação de páginas" class="mt-4">
            <ul class="pagination justify-content-center">
                @if (currentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@(currentPage - 1)" asp-route-pageSize="@pageSize">
                            <i class="fas fa-chevron-left"></i> Anterior
                        </a>
                    </li>
                }

                @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-pageSize="@pageSize">@i</a>
                    </li>
                }

                @if (currentPage < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@(currentPage + 1)" asp-route-pageSize="@pageSize">
                            Próxima <i class="fas fa-chevron-right"></i>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }

    <div class="text-center text-muted mt-3">
        <small>
            Mostrando @Model.Count() de @totalItems pagamentos
            @if (totalPages > 1)
            {
                <text>(Página @currentPage de @totalPages)</text>
            }
        </small>
    </div>
}
else
{
    <div class="card shadow-sm">
        <div class="card-body text-center py-5">
            <i class="fas fa-money-bill-wave text-muted mb-3" style="font-size: 4rem;"></i>
            <h4 class="text-muted mb-3">Nenhum pagamento encontrado</h4>
            <p class="text-muted mb-4">
                Você ainda não possui pagamentos registrados.<br>
                <small>Para registrar pagamentos, é necessário ter imóveis cadastrados e contratos de aluguel ativos.</small>
            </p>
            
            <div class="d-flex justify-content-center gap-2 flex-wrap">
                <a asp-controller="Imovel" asp-action="Index" class="btn btn-outline-primary">
                    <i class="fas fa-building me-2"></i>Meus Imóveis
                </a>
                <a asp-controller="Aluguel" asp-action="Index" class="btn btn-outline-secondary">
                    <i class="fas fa-file-contract me-2"></i>Meus Aluguéis
                </a>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus me-2"></i>Novo Pagamento
                </a>
            </div>
            
            <div class="mt-4">
                <small class="text-muted">
                    <strong>Dica:</strong> Cadastre primeiro um imóvel, depois um inquilino e crie um contrato de aluguel para poder registrar pagamentos.
                </small>
            </div>
        </div>
    </div>
}