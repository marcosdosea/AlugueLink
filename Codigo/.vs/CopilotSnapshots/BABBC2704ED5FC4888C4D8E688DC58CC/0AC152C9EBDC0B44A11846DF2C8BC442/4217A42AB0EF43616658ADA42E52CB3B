using System.ComponentModel.DataAnnotations;

namespace AlugueLinkWEB.Models
{
    public class ImovelViewModel
    {
        public int Id { get; set; }

        [Display(Name = "CEP")]
        [Required(ErrorMessage = "CEP é obrigatório")]
        [StringLength(8, ErrorMessage = "CEP deve ter 8 caracteres")]
        public string? Cep { get; set; }

        [Display(Name = "Logradouro")]
        [Required(ErrorMessage = "Logradouro é obrigatório")]
        [StringLength(100, ErrorMessage = "Logradouro não pode ter mais de 100 caracteres")]
        public string? Logradouro { get; set; }

        [Display(Name = "Número")]
        [Required(ErrorMessage = "Número é obrigatório")]
        [StringLength(5, ErrorMessage = "Número não pode ter mais de 5 caracteres")]
        public string? Numero { get; set; }

        [Display(Name = "Complemento")]
        [StringLength(50, ErrorMessage = "Complemento não pode ter mais de 50 caracteres")]
        public string? Complemento { get; set; }

        [Display(Name = "Bairro")]
        [Required(ErrorMessage = "Bairro é obrigatório")]
        [StringLength(50, ErrorMessage = "Bairro não pode ter mais de 50 caracteres")]
        public string? Bairro { get; set; }

        [Display(Name = "Cidade")]
        [Required(ErrorMessage = "Cidade é obrigatória")]
        [StringLength(45, ErrorMessage = "Cidade não pode ter mais de 45 caracteres")]
        public string? Cidade { get; set; }

        [Display(Name = "Estado")]
        [Required(ErrorMessage = "Estado é obrigatório")]
        [StringLength(2, ErrorMessage = "Estado deve ter 2 caracteres")]
        public string? Estado { get; set; }

        [Display(Name = "Tipo")]
        [Required(ErrorMessage = "Tipo de imóvel é obrigatório")]
        public string? Tipo { get; set; }

        [Display(Name = "Quartos")]
        [Required(ErrorMessage = "Número de quartos é obrigatório")]
        [Range(0, 50, ErrorMessage = "Número de quartos deve estar entre 0 e 50")]
        public int? Quartos { get; set; }

        [Display(Name = "Banheiros")]
        [Required(ErrorMessage = "Número de banheiros é obrigatório")]
        [Range(0, 50, ErrorMessage = "Número de banheiros deve estar entre 0 e 50")]
        public int? Banheiros { get; set; }

        [Display(Name = "Área (m²)")]
        [Required(ErrorMessage = "Área é obrigatória")]
        [Range(0.01, 99999.99, ErrorMessage = "Área deve ser um valor entre 0,01 e 99.999,99 m²")]
        public decimal? Area { get; set; }

        [Display(Name = "Vagas Garagem")]
        [Range(0, 50, ErrorMessage = "Número de vagas deve estar entre 0 e 50")]
        public int? VagasGaragem { get; set; }

        [Display(Name = "Valor (R$)")]
        [Required(ErrorMessage = "Valor do aluguel é obrigatório")]
        [Range(0.01, 999999.99, ErrorMessage = "Valor deve estar entre R$ 0,01 e R$ 999.999,99")]
        [DataType(DataType.Currency)]
        public decimal? Valor { get; set; }

        [Display(Name = "Descrição")]
        public string? Descricao { get; set; }

        [Display(Name = "Locador")]
        [Required(ErrorMessage = "Locador é obrigatório")]
        public int LocadorId { get; set; }

        public string? LocadorNome { get; set; }
    }
}